// <autogenerated>
//   This file was generated by T4 code generator Main.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using AutoMapper;
using Mt.Core.Infrastructure;
using SanXing.Data.Models;

namespace SanXing.ViewModels
{
    public static class MappingExtensions
    {

        public static ContactRecordModel ToModel(this ContactRecord entity)
        {
            return Mapper.Map<ContactRecord, ContactRecordModel>(entity);
        }

        public static ContactRecord ToEntity(this ContactRecordModel model)
        {
            return Mapper.Map<ContactRecordModel, ContactRecord>(model);
        }

        public static ContactRecord ToEntity(this ContactRecordModel model, ContactRecord entity)
        {
            return Mapper.Map(model, entity);
        }

        public static ContactTypeModel ToModel(this ContactType entity)
        {
            return Mapper.Map<ContactType, ContactTypeModel>(entity);
        }

        public static ContactType ToEntity(this ContactTypeModel model)
        {
            return Mapper.Map<ContactTypeModel, ContactType>(model);
        }

        public static ContactType ToEntity(this ContactTypeModel model, ContactType entity)
        {
            return Mapper.Map(model, entity);
        }

        public static CostModel ToModel(this Cost entity)
        {
            return Mapper.Map<Cost, CostModel>(entity);
        }

        public static Cost ToEntity(this CostModel model)
        {
            return Mapper.Map<CostModel, Cost>(model);
        }

        public static Cost ToEntity(this CostModel model, Cost entity)
        {
            return Mapper.Map(model, entity);
        }

        public static PlanModel ToModel(this Plan entity)
        {
            return Mapper.Map<Plan, PlanModel>(entity);
        }

        public static Plan ToEntity(this PlanModel model)
        {
            return Mapper.Map<PlanModel, Plan>(model);
        }

        public static Plan ToEntity(this PlanModel model, Plan entity)
        {
            return Mapper.Map(model, entity);
        }

        public static UserModel ToModel(this User entity)
        {
            return Mapper.Map<User, UserModel>(entity);
        }

        public static User ToEntity(this UserModel model)
        {
            return Mapper.Map<UserModel, User>(model);
        }

        public static User ToEntity(this UserModel model, User entity)
        {
            return Mapper.Map(model, entity);
        }

        public static ContactModel ToModel(this Contact entity)
        {
            return Mapper.Map<Contact, ContactModel>(entity);
        }

        public static Contact ToEntity(this ContactModel model)
        {
            return Mapper.Map<ContactModel, Contact>(model);
        }

        public static Contact ToEntity(this ContactModel model, Contact entity)
        {
            return Mapper.Map(model, entity);
        }

        public static BlogModel ToModel(this Blog entity)
        {
            return Mapper.Map<Blog, BlogModel>(entity);
        }

        public static Blog ToEntity(this BlogModel model)
        {
            return Mapper.Map<BlogModel, Blog>(model);
        }

        public static Blog ToEntity(this BlogModel model, Blog entity)
        {
            return Mapper.Map(model, entity);
        }

        public static TimeCostModel ToModel(this TimeCost entity)
        {
            return Mapper.Map<TimeCost, TimeCostModel>(entity);
        }

        public static TimeCost ToEntity(this TimeCostModel model)
        {
            return Mapper.Map<TimeCostModel, TimeCost>(model);
        }

        public static TimeCost ToEntity(this TimeCostModel model, TimeCost entity)
        {
            return Mapper.Map(model, entity);
        }

        public static ContactWayModel ToModel(this ContactWay entity)
        {
            return Mapper.Map<ContactWay, ContactWayModel>(entity);
        }

        public static ContactWay ToEntity(this ContactWayModel model)
        {
            return Mapper.Map<ContactWayModel, ContactWay>(model);
        }

        public static ContactWay ToEntity(this ContactWayModel model, ContactWay entity)
        {
            return Mapper.Map(model, entity);
        }

        public static CostTypeModel ToModel(this CostType entity)
        {
            return Mapper.Map<CostType, CostTypeModel>(entity);
        }

        public static CostType ToEntity(this CostTypeModel model)
        {
            return Mapper.Map<CostTypeModel, CostType>(model);
        }

        public static CostType ToEntity(this CostTypeModel model, CostType entity)
        {
            return Mapper.Map(model, entity);
        }

        public static RichTypeModel ToModel(this RichType entity)
        {
            return Mapper.Map<RichType, RichTypeModel>(entity);
        }

        public static RichType ToEntity(this RichTypeModel model)
        {
            return Mapper.Map<RichTypeModel, RichType>(model);
        }

        public static RichType ToEntity(this RichTypeModel model, RichType entity)
        {
            return Mapper.Map(model, entity);
        }

        public static BlogTypeModel ToModel(this BlogType entity)
        {
            return Mapper.Map<BlogType, BlogTypeModel>(entity);
        }

        public static BlogType ToEntity(this BlogTypeModel model)
        {
            return Mapper.Map<BlogTypeModel, BlogType>(model);
        }

        public static BlogType ToEntity(this BlogTypeModel model, BlogType entity)
        {
            return Mapper.Map(model, entity);
        }

        public static TimeCostTypeModel ToModel(this TimeCostType entity)
        {
            return Mapper.Map<TimeCostType, TimeCostTypeModel>(entity);
        }

        public static TimeCostType ToEntity(this TimeCostTypeModel model)
        {
            return Mapper.Map<TimeCostTypeModel, TimeCostType>(model);
        }

        public static TimeCostType ToEntity(this TimeCostTypeModel model, TimeCostType entity)
        {
            return Mapper.Map(model, entity);
        }


    }
}
